{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifts.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","getGifs","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"yKAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACG,sBAAMC,SAZY,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,MAOnB,SACK,uBACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,2ECRpB,WAAuBG,GAAvB,uBAAAC,EAAA,6DACDC,EADC,iDAC+CC,UAAUH,GADzD,+DAEYI,MAAMF,GAFlB,cAEDG,EAFC,gBAGgBA,EAAKC,OAHrB,uBAGCC,EAHD,EAGCA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATnC,kBAaAM,GAbA,6C,sBCEJ,IAAMO,EAAe,SAAC,GAAmB,IAAhBf,EAAe,EAAfA,SAAe,EAEjBb,mBAAS,CAC9BoB,KAAM,GACNS,SAAS,IAJ6B,mBAEpCC,EAFoC,KAE7BC,EAF6B,KAqBvC,OAdAC,qBAAU,YDTP,SAAP,mCCWQC,CAASpB,GACJqB,MAAO,SAAAC,GACJJ,EAAU,CACNX,KAAMe,EACNN,SAAS,SAGvB,CAAEhB,IAKGiB,GCtBFM,EAAc,SAAC,GAAoB,IAAlBX,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGjC,OACI,sBAAKsB,UAAU,yCAAf,UACI,qBAAKC,IAAOvB,EAAMwB,IAAMd,IACxB,4BAAKA,QCJJe,EAAU,SAAC,GACvB,IAD0B3B,EAC3B,EAD2BA,SAC3B,EAIoCe,EAAc,CAACf,aAAlCa,EAJjB,EAIYN,KAAaS,EAJzB,EAIyBA,QAIrB,OACI,qCACI,oBAAIQ,UAAU,oCAAd,SAAmDxB,IACjDgB,GAAW,mBAAGQ,UAAU,mCAAb,qBACb,qBAAMA,UAAU,YAAhB,SAGYX,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCmB1BiB,EArCM,WAEjB,IAFsB,EAIczC,mBAFzB,CAAC,cAFU,mBAIf0C,EAJe,KAIH3C,EAJG,KAetB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEJ,6BAEI2C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADJA,Y,MCpB3B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.5274be59.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('')\r\n\r\n    const handleInputChange = (e) => {\r\n        \r\n        setInputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2){\r\n            setCategories(cats=> [inputValue,...cats,]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n        \r\n    }\r\n    return (\r\n       <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange= { handleInputChange}\r\n            \r\n            />\r\n       </form>\r\n  \r\n    )\r\n}\r\n\r\nAddCategory.propTypes ={\r\n    setCategories : PropTypes.func.isRequired,\r\n}","\r\n    export async function getGifs(category) {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=kOpXJiDQmTSBD9b3O6aP3mrbFP1a17OY`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n\r\n    return gifs;\r\n}","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( { category} ) => {\r\n\r\n    const [state, setState] = useState({\r\n         data: [],\r\n         loading: true\r\n        } );\r\n\r\n        useEffect(()=>{\r\n\r\n            getGifs( category )\r\n                .then ( imgs =>{\r\n                    setState( {\r\n                        data: imgs,\r\n                        loading: false\r\n                       });\r\n                })\r\n        },[ category ])\r\n\r\n\r\n\r\n\r\n        return state; //{ data: [], loading: true}\r\n\r\n                    // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( imgs => setImages( imgs ) );\r\n    // },[ category ])\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src= { url } alt={ title }></img>\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifts'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ( { category }) => \r\n{\r\n\r\n\r\n\r\n    const { data:images, loading } =useFetchGifs( {category} );\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div  className=\"card-grid\">\r\n\r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n\r\n    const arr= ['One Punch'];\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(arr);\r\n\r\n\r\n\r\n\r\n    // const handleAdd = () => {\r\n\r\n    //     setCategories( cats => [ ...categories, 'HunterX']);\r\n    // }\r\n    \r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories } />\r\n            <hr/>\r\n       \r\n        <ol>\r\n            {\r\n            categories.map( category => \r\n                <GifGrid \r\n                    key= { category }\r\n                    category={ category } />\r\n                )\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n    )\r\n    \r\n\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\n\nimport './index.css';\n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}